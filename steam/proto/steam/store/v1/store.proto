syntax = "proto3";

package proto.steam.store.v1;

option go_package = "github.com/zalgonoise/x/steam/pb/proto/steam/store";

message AppDetailsResponse {
  map<string, AppDetails> app_details = 1 [json_name="app_details"];
}

message AppDetails {
  bool success = 1 [json_name="success"];
  Data data = 2 [json_name="data"];
}

message Data {
  string type = 1 [json_name="type"];
  string name = 2 [json_name="name"];
  int64 steam_appid = 3  [json_name="steam_appid"];
  int32 required_age = 4 [json_name="required_age"];
  bool is_free = 5 [json_name="is_free"];
  repeated int64 dlc = 6 [json_name="dlc"];
  string detailed_description = 7 [json_name="detailed_description"];
  string about_the_game = 8 [json_name="about_the_game"];
  string short_description = 9 [json_name="short_description"];
  string supported_languages = 10 [json_name="supported_languages"];
  string header_image = 11 [json_name="header_image"];
  string capsule_image = 12 [json_name="capsule_image"];
  string capsule_imagev5 = 13 [json_name="capsule_imagev5"];
  string website = 14 [json_name="website"];
  Requirements pc_requirements = 15 [json_name="pc_requirements"];
  Requirements mac_requirements = 16 [json_name="mac_requirements"];
  Requirements linux_requirements = 17 [json_name="linux_requirements"];
  string legal_notice = 18 [json_name="legal_notice"];
  repeated string developers = 19 [json_name="developers"];
  repeated string publishers = 20 [json_name="publishers"];
  repeated Demo demos = 21 [json_name="demos"];
  PriceOverview price_overview = 22 [json_name="price_overview"];
  repeated int64 packages = 23 [json_name="packages"];
  repeated PackageGroup package_groups = 24 [json_name="package_groups"];
  Platforms platforms = 25 [json_name="platforms"];
  Metacritic metacritic = 26 [json_name="metacritic"];
  repeated Category categories = 27 [json_name="categories"];
  repeated Genre genres = 28 [json_name="genres"];
  repeated Screenshot screenshots = 29 [json_name="screenshots"];
  repeated Movie movies = 30 [json_name="movies"];
  Recommendations recommendations = 31 [json_name="recommendations"];
  Achievements achievements = 32 [json_name="achievements"];
  ReleaseDate release_date = 33 [json_name="release_date"];
  SupportInfo support_info = 34 [json_name="support_info"];
  string background = 35 [json_name="background"];
  string background_raw = 36 [json_name="background_raw"];
  ContentDescriptors content_descriptors = 37 [json_name="content_descriptors"];
}

message Requirements {
  string minimum = 1 [json_name="minimum"];
  string recommended = 2 [json_name="recommended"];
}

message Demo {
  int64 appid = 1 [json_name="appid"];
  string description = 2 [json_name="description"];
}

message PriceOverview {
  string currency = 1 [json_name="currency"];
  int32 initial = 2 [json_name="initial"];
  int32 final = 3 [json_name="final"];
  int32 discount_percent = 4 [json_name="discount_percent"];
  string initial_formatted = 5 [json_name="initial_formatted"];
  string final_formatted = 6 [json_name="final_formatted"];
}

message PackageGroup {
  string name = 1 [json_name="name"];
  string title = 2 [json_name="title"];
  string description = 3 [json_name="description"];
  string selection_text = 4 [json_name="selection_text"];
  string save_text = 5 [json_name="save_text"];
  int32 display_type = 6 [json_name="display_type"];
  string is_recurring_subscription = 7 [json_name="is_recurring_subscription"];
  repeated Sub subs = 8 [json_name="subs"];
}

message Sub {
  int64 packageid = 1 [json_name="packageid"];
  string percent_savings_text = 2 [json_name="percent_savings_text"];
  int32 percent_savings = 3 [json_name="percent_savings"];
  string option_text = 4 [json_name="option_text"];
  string option_description = 5 [json_name="option_description"];
  string can_get_free_license = 6 [json_name="can_get_free_license"];
  bool is_free_license = 7 [json_name="is_free_license"];
  int32 price_in_cents_with_discount = 8 [json_name="price_in_cents_with_discount"];
}

message Platforms {
  bool windows = 1 [json_name="windows"];
  bool mac = 2 [json_name="mac"];
  bool linux = 3 [json_name="linux"];
}

message Metacritic {
  int64 score = 1 [json_name="score"];
  string url = 2 [json_name="url"];
}

message Category {
  int64 id = 1 [json_name="id"];
  string description = 2 [json_name="description"];
}

message Genre {
  string id = 1 [json_name="id"];
  string description = 2 [json_name="description"];
}

message Screenshot {
  int64 id = 1 [json_name="id"];
  string path_thumbnail = 2 [json_name="path_thumbnail"];
  string path_full = 3 [json_name="path_full"];
}

message Movie {
  int64 id = 1 [json_name="id"];
  string name = 2 [json_name="name"];
  string thumbnail = 3 [json_name="thumbnail"];
  map<string, string> webm = 4 [json_name="webm"];
  map<string, string> mp4 = 5 [json_name="mp4"];
  bool highlight = 6 [json_name="highlight"];
}

message Recommendations {
  int64 total = 1 [json_name="total"];
}

message Achievements {
  int64 total = 1 [json_name="total"];
  repeated Highlight highlighted = 2 [json_name="highlighted"];
}

message Highlight {
  string name = 1 [json_name="name"];
  string path = 2 [json_name="path"];
}

message ReleaseDate {
  bool coming_soon = 1 [json_name="coming_soon"];
  string date = 2 [json_name="date"];
}

message SupportInfo {
  string url = 1 [json_name="url"];
  string email = 2 [json_name="email"];
}

message ContentDescriptors {
  repeated int64 ids = 1 [json_name="ids"];
  string notes = 2 [json_name="notes"];
}

message DevelopersResponse {
  map<string, DevelopersFilter> developers = 1 [json_name="developers"];
}

message DevelopersFilter {
  bool success = 1 [json_name="success"];
  DevelopersData data = 2 [json_name="data"];
}

message DevelopersData {
  repeated string developers = 1 [json_name="developers"];
}

message PublishersResponse {
  map<string, PublishersFilter> publishers = 1 [json_name="publishers"];
}

message PublishersFilter {
  bool success = 1 [json_name="success"];
  PublishersData data = 2 [json_name="data"];
}

message PublishersData {
  repeated string publishers = 1 [json_name="publishers"];
}

message DemosResponse {
  map<string, DemosFilter> demos = 1 [json_name="demos"];
}

message DemosFilter {
  bool success = 1 [json_name="success"];
  DemosData data = 2 [json_name="data"];
}

message DemosData {
  repeated Demo demos = 1 [json_name="demos"];
}

message PriceOverviewResponse {
  map<string, PriceOverviewFilter> price_overview = 1 [json_name="price_overview"];
}

message PriceOverviewFilter {
  bool success = 1 [json_name="success"];
  PriceOverviewData data = 2 [json_name="data"];
}

message PriceOverviewData {
  PriceOverview price_overview = 1 [json_name="price_overview"];
}


message PackagesResponse {
  map<string, PackagesFilter> packages = 1 [json_name="packages"];
}

message PackagesFilter {
  bool success = 1 [json_name="success"];
  PackagesData data = 2 [json_name="data"];
}

message PackagesData {
  repeated int64 packages = 1 [json_name="packages"];
  repeated PackageGroup package_groups = 2 [json_name="package_groups"];
}

message PlatformsResponse {
  map<string, PlatformsFilter> platforms = 1 [json_name="platforms"];
}

message PlatformsFilter {
  bool success = 1 [json_name="success"];
  PlatformsData data = 2 [json_name="data"];
}

message PlatformsData {
  Platforms platforms = 1 [json_name="platforms"];
}

message CategoriesResponse {
  map<string, CategoriesFilter> categories = 1 [json_name="categories"];
}

message CategoriesFilter {
  bool success = 1 [json_name="success"];
  CategoriesData data = 2 [json_name="data"];
}

message CategoriesData {
  repeated Category categories = 1 [json_name="categories"];
}

message GenresResponse {
  map<string, GenresFilter> genres = 1 [json_name="genres"];
}

message GenresFilter {
  bool success = 1 [json_name="success"];
  GenresData data = 2 [json_name="data"];
}

message GenresData {
  repeated Category genres = 1 [json_name="genres"];
}

message ScreenshotsResponse {
  map<string, ScreenshotsFilter> screenshots = 1 [json_name="screenshots"];
}

message ScreenshotsFilter {
  bool success = 1 [json_name="success"];
  ScreenshotsData data = 2 [json_name="data"];
}

message ScreenshotsData {
  repeated Screenshot screenshots = 1 [json_name="screenshots"];
}

message MoviesResponse {
  map<string, MoviesFilter> movies = 1 [json_name="movies"];
}

message MoviesFilter {
  bool success = 1 [json_name="success"];
  MoviesData data = 2 [json_name="data"];
}

message MoviesData {
  repeated Movie movies = 1 [json_name="movies"];
}

message RecommendationsResponse {
  map<string, RecommendationsFilter> recommendations = 1 [json_name="recommendations"];
}

message RecommendationsFilter {
  bool success = 1 [json_name="success"];
  RecommendationsData data = 2 [json_name="data"];
}

message RecommendationsData {
  Recommendations recommendations = 1 [json_name="recommendations"];
}

message AchievementsResponse {
  map<string, AchievementsFilter> achievements = 1 [json_name="achievements"];
}

message AchievementsFilter {
  bool success = 1 [json_name="success"];
  AchievementsData data = 2 [json_name="data"];
}

message AchievementsData {
  Achievements achievements = 1 [json_name="achievements"];
}

message ReleaseDateResponse {
  map<string, ReleaseDateFilter> release_date = 1 [json_name="release_date"];
}

message ReleaseDateFilter {
  bool success = 1 [json_name="success"];
  ReleaseDateData data = 2 [json_name="data"];
}

message ReleaseDateData {
  ReleaseDate release_date = 1 [json_name="release_date"];
}

message SupportInfoResponse {
  map<string, SupportInfoFilter> support_info = 1 [json_name="support_info"];
}

message SupportInfoFilter {
  bool success = 1 [json_name="success"];
  SupportInfoData data = 2 [json_name="data"];
}

message SupportInfoData {
  SupportInfo support_info = 1 [json_name="support_info"];
}

message BackgroundResponse {
  map<string, BackgroundFilter> background = 1 [json_name="background"];
}

message BackgroundFilter {
  bool success = 1 [json_name="success"];
  BackgroundData data = 2 [json_name="data"];
}

message BackgroundData {
  string background = 1 [json_name="background"];
  string background_raw = 2 [json_name="background_raw"];
}

message ContentDescriptorsResponse {
  map<string, ContentDescriptorsFilter> content_descriptors = 1 [json_name="content_descriptors"];
}

message ContentDescriptorsFilter {
  bool success = 1 [json_name="success"];
  ContentDescriptorsData data = 2 [json_name="data"];
}

message ContentDescriptorsData {
  ContentDescriptors content_descriptors = 1 [json_name="content_descriptors"];
}