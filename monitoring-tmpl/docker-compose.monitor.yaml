version: '3.8'
services:

  prom:
    image: prom/prometheus
    restart: unless-stopped
    ports:
      - "9090:9090"
    volumes:
      - ./provisioning/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--storage.tsdb.retention.time=730d'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
      - '--web.enable-remote-write-receiver'
      - '--enable-feature=exemplar-storage'
      - '--enable-feature=memory-snapshot-on-shutdown'
      - '--enable-feature=traceToMetrics'
    healthcheck:
      test: [ "CMD-SHELL", "wget --no-verbose --tries=1 --spider http://localhost:9090/-/healthy || exit 1" ]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      app-runtime:

  grafana:
    image: grafana/grafana
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - GF_FEATURE_TOGGLES_ENABLE=traceqlEditor
      - GF_PATHS_PROVISIONING=/etc/grafana/provisioning
    volumes:
      - ./provisioning/grafana/datasources:/etc/grafana/provisioning/datasources:ro
      - grafana:/var/lib/grafana
    healthcheck:
      test: [ "CMD-SHELL", "wget --no-verbose --tries=1 --spider http://localhost:3000/api/health || exit 1" ]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      app-runtime:

  tempo:
    image: grafana/tempo:latest
    command: [ "-config.file=/etc/tempo.yaml" ]
    volumes:
      - ./provisioning/tempo/tempo.yaml:/etc/tempo.yaml
      - tempo:/data/tempo
    ports:
      - "3200:3200"   # tempo
      - "4317:4317"  # otlp grpc
    healthcheck:
      test: [ "CMD-SHELL", "wget --no-verbose --tries=1 --spider http://localhost:3200/ready || exit 1" ]
      interval: 10s
      timeout: 5s
      retries: 5
    depends_on:
      - minio
    networks:
      app-runtime:

  minio:
    image: minio/minio:latest
    environment:
      MINIO_ROOT_USER: accesskey
      MINIO_ROOT_PASSWORD: accesssecret
    ports:
      - "9000:9000"
      - "9091:9091"
    volumes:
      - minio:/data
    entrypoint:
      - sh
      - -euc
      - mkdir -p /data/{tempo,loki} && /opt/bin/minio server /data --console-address ":9091"
    healthcheck:
      test: [ "CMD-SHELL", "wget --no-verbose --tries=1 --spider http://localhost:9000/minio/health/ready || exit 1" ]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      app-runtime:

  loki:
    image: grafana/loki:2.8.3
    ports:
      - "3100:3100"
    command: -config.file=/etc/loki/local-config.yaml
    volumes:
      - ./provisioning/loki/loki.yaml:/etc/loki/local-config.yaml:ro
      - loki:/loki
    healthcheck:
      test: [ "CMD-SHELL", "wget --no-verbose --tries=1 --spider http://localhost:3100/ready || exit 1" ]
      interval: 10s
      timeout: 5s
      retries: 5
    depends_on:
      - minio
    networks:
      app-runtime:

  promtail:
    image: grafana/promtail:2.8.3
    volumes:
      -  /var/run/docker.sock:/var/run/docker.sock
      - ./provisioning/promtail/promtail.yaml:/etc/promtail/config.yaml:ro
    command: -config.file=/etc/promtail/config.yaml
    ports:
      - "9080:9080"
    healthcheck:
      test: [ "CMD-SHELL", "wget --no-verbose --tries=1 --spider http://localhost:9080/ready || exit 1" ]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      app-runtime:

volumes:
  grafana:
  loki:
  minio:
  prometheus:
  tempo:

networks:
  app-runtime:
