services:
  prom:
    image: prom/prometheus
    container_name: prom
    restart: unless-stopped
    ports:
      - "9090:9090"
    volumes:
      - ./provisioning/prometheus/prometheus.yaml:/etc/prometheus/prometheus.yaml:ro
      - observability-prom:/prometheus
    command:
      - "--config.file=/etc/prometheus/prometheus.yaml"
      - "--storage.tsdb.path=/prometheus"
      - "--storage.tsdb.retention.time=730d"
      - "--web.console.libraries=/etc/prometheus/console_libraries"
      - "--web.console.templates=/etc/prometheus/consoles"
      - "--web.enable-lifecycle"
      - "--enable-feature=exemplar-storage"
      - "--enable-feature=memory-snapshot-on-shutdown"
      - "--enable-feature=traceToMetrics"
    healthcheck:
      test: [ "CMD-SHELL", "wget --noverbose --tries=1 --spider http://localhost:9090/-/healthy || exit 1" ]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      app-runtime:

  grafana:
    image: grafana/grafana
    container_name: grafana
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      GF_FEATURE_TOGGLES_ENABLE: traceqlEditor metricsSummary
      GF_PATHS_PROVISIONING: /etc/grafana/provisioning
      GF_INSTALL_PLUGINS: https://storage.googleapis.com/integration-artifacts/grafana-exploretraces-app/grafana-exploretraces-app-latest.zip;grafana-traces-app;grafana-pyroscope-app
    volumes:
      - ./provisioning/grafana/datasources:/etc/grafana/provisioning/datasources:ro
      - observability-grafana:/var/lib/grafana
    healthcheck:
      test: [ "CMD-SHELL", "wget --noverbose --tries=1 --spider http://localhost:3000/api/health || exit 1" ]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      app-runtime:

  tempo:
    image: grafana/tempo:latest
    container_name: tempo
    command: [ "-config.file=/etc/tempo.yaml" ]
    volumes:
      - ./provisioning/tempo/tempo.yaml:/etc/tempo.yaml:ro
      - observability-tempo:/etc/tempo
    ports:
      - "3200:3200"
      - "4317:4317"
    healthcheck:
      test: [ "CMD-SHELL", "wget --noverbose --tries=1 --spider http://localhost:3200/ready || exit 1" ]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      app-runtime:

  loki:
    image: grafana/loki:2.8.3
    container_name: loki
    ports:
      - "3100:3100"
    command: [ "-config.file=/etc/loki/local-config.yaml" ]
    volumes:
      - ./provisioning/loki/loki.yaml:/etc/loki/local-config.yaml:ro
    healthcheck:
      test: [ "CMD-SHELL", "wget --noverbose --tries=1 --spider http://localhost:3100/ready || exit 1" ]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      app-runtime:

  promtail:
    image: grafana/promtail:2.8.3
    container_name: promtail
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./provisioning/promtail/promtail.yaml:/etc/promtail/config.yaml:ro
    command: [ "-config.file=/etc/promtail/config.yaml" ]
    ports:
      - "9080:9080"
    healthcheck:
      test: [ "CMD-SHELL", "wget --noverbose --tries=1 --spider http://localhost:9080/ready || exit 1" ]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      app-runtime:

  pyroscope:
    image: grafana/pyroscope:latest
    ports:
      - "4040:4040"
    healthcheck:
      test: [ "CMD-SHELL", "wget --noverbose --tries=1 --spider http://localhost:4040/ready || exit 1" ]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - observability-pyroscope:/etc/pyroscope
    networks:
      app-runtime:

volumes:
  observability-prom:
  observability-grafana:
  observability-tempo:
  observability-pyroscope:

networks:
  app-runtime:
